version: '2.1'
services:
  sql-client:
    image: wopeizl/sql-client:0.2
    build: ./images/client-image
    container_name: sql-client
    command: "java -classpath /opt/data/data-producer.jar com.ververica.sql_training.data_producer.TaxiRecordProducer --input file /opt/data --output kafka kafka:9092 --speedup 10.0"
    depends_on:
      - kafka
      - jobmanager
      - mysql
      - minio
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
      KAFKA_BOOTSTRAP: kafka
      MYSQL_HOST: mysql
  jobmanager:
    image: wopeizl/flink1.12.1-yarn-embedded:0.1
    build: ./images/flink-image
    container_name: "jobmanager"
    hostname: "jobmanager"
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager:
    image: wopeizl/flink1.12.2-yarn-embedded:0.1
    build: ./images/flink-image
    container_name: taskmanager
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Rides:1:1, Fares:1:1, DriverChanges:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mysql:
    image: mysql:8.0.19
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql
    environment:
      MYSQL_USER: "flink"
      MYSQL_PASSWORD: "secret"
      MYSQL_DATABASE: "flinksql"
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/my.cnf
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    container_name: minio 
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"
      - "9001:9001"

  namenode:
    image: coomia/hadoop3.2-namenode:0.1
    container_name: namenode
    ports:
      - 9870:9870
      - 9100:9000
    environment:
      - CLUSTER_NAME=coomia-hdp-cluster
    env_file:
      - ./hadoop.env

  datanode:
    image: coomia/hadoop3.2-datanode:0.1
    container_name: datanode
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    ports:
      - "9864"
    env_file:
      - ./hadoop.env


  hive-metastore:
    image: coomia/hive3.1-hadoop3.2:0.1
    container_name: hive-metastore
    volumes:
      - ./data/tools:/tools
    env_file:
      - ./hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-pg:5432"
    ports:
      - "9083:9083"
      
  hive-metastore-pg:
    image: coomia/hive3.1-metastore-pg:0.1
    container_name: hive-metastore-pg

  hive-server:
    image: coomia/hive3.1-hadoop3.2:0.1
    container_name: hive-server
    env_file:
      - ./hadoop.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

    
